import { type GetStylesParams, getStyles } from './getStyles';

export function extractStyleProps(props: GetStylesParams) {
  const {
    color,
    colorChecked,
    placeholderColor,
    fontFamily,
    fontSize,
    fontWeight,
    lineHeight,
    textAlign,
    textTransform,
    spacing,
    spacingHorizontal,
    spacingVertical,
    spacingTop,
    spacingBottom,
    spacingStart,
    spacingEnd,
    offset,
    offsetVertical,
    offsetHorizontal,
    offsetTop,
    offsetBottom,
    offsetStart,
    offsetEnd,
    columnGap,
    rowGap,
    backgroundColor,
    backgroundColorOnActive,
    backgroundColorOnHover,
    backgroundColorOnChecked,
    borderColor,
    borderColorOnActive,
    borderColorOnFocus,
    borderVerticalColor,
    borderHorizontalColor,
    borderTopColor,
    borderBottomColor,
    borderStartColor,
    borderEndColor,
    borderRadius,
    borderTopStartRadius,
    borderTopEndRadius,
    borderBottomStartRadius,
    borderBottomEndRadius,
    bordered,
    borderedHorizontal,
    borderedVertical,
    borderedTop,
    borderedBottom,
    borderedStart,
    borderedEnd,
    borderWidth,
    borderVerticalWidth,
    borderHorizontalWidth,
    borderStartWidth,
    borderEndWidth,
    borderTopWidth,
    borderBottomWidth,
    height,
    minHeight,
    maxHeight,
    width,
    minWidth,
    maxWidth,
    overflow,
    overflowX,
    overflowY,
    position,
    zIndex,
    opacity,
    contentFit,
    iconSize,
    avatarSize,
    className,
    ...otherProps
  } = props;

  const finalClassName = getStyles({
    color,
    colorChecked,
    placeholderColor,
    fontFamily,
    fontSize,
    fontWeight,
    lineHeight,
    textAlign,
    textTransform,
    spacing,
    spacingHorizontal,
    spacingVertical,
    spacingTop,
    spacingBottom,
    spacingStart,
    spacingEnd,
    offset,
    offsetVertical,
    offsetHorizontal,
    offsetTop,
    offsetBottom,
    offsetStart,
    offsetEnd,
    columnGap,
    rowGap,
    backgroundColor,
    backgroundColorOnActive,
    backgroundColorOnHover,
    backgroundColorOnChecked,
    borderColor,
    borderColorOnActive,
    borderColorOnFocus,
    borderVerticalColor,
    borderHorizontalColor,
    borderTopColor,
    borderBottomColor,
    borderStartColor,
    borderEndColor,
    borderRadius,
    borderTopStartRadius,
    borderTopEndRadius,
    borderBottomStartRadius,
    borderBottomEndRadius,
    bordered,
    borderedHorizontal,
    borderedVertical,
    borderedTop,
    borderedBottom,
    borderedStart,
    borderedEnd,
    borderWidth,
    borderVerticalWidth,
    borderHorizontalWidth,
    borderStartWidth,
    borderEndWidth,
    borderTopWidth,
    borderBottomWidth,
    height,
    minHeight,
    maxHeight,
    width,
    minWidth,
    maxWidth,
    overflow,
    overflowX,
    overflowY,
    position,
    zIndex,
    opacity,
    contentFit,
    iconSize,
    avatarSize,
    className,
  });

  return { ...otherProps, className: finalClassName };
}
